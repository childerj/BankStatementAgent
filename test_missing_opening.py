#!/usr/bin/env python3
"""Test BAI2 generation when opening balance is truly missing (not suspicious)"""

import sys
sys.path.append('.')
from function_app import reconcile_transactions, convert_to_bai2

def test_missing_opening_balance():
    """Test BAI2 generation when opening balance is genuinely missing from statement"""
    
    print("🧪 TESTING TRULY MISSING OPENING BALANCE")
    print("=" * 70)
    print("📊 Simulating statement with genuinely missing opening balance:")
    print("   Opening Balance: MISSING (not in statement)")
    print("   Total Deposits:  $2,500.00") 
    print("   Total Withdrawals: $1,200.00")
    print("   Closing Balance: $6,300.00")
    print("   ⚠️  This is NOT suspicious - just missing")
    print()
    
    # Create test data with missing opening balance (None, not suspicious)
    test_data = {
        "opening_balance": None,  # Truly missing
        "closing_balance": {"amount": 6300.00},
        "transactions": [
            {"date": "2025-08-04", "amount": 1500.00, "description": "Deposit 1", "type": "deposit"},
            {"date": "2025-08-04", "amount": 1000.00, "description": "Deposit 2", "type": "deposit"},
            {"date": "2025-08-04", "amount": -600.00, "description": "Withdrawal 1", "type": "withdrawal"},
            {"date": "2025-08-04", "amount": -600.00, "description": "Withdrawal 2", "type": "withdrawal"}
        ],
        "account_number": "1234567",
        "routing_number": "113122655"
    }
    
    print("🔄 Running reconciliation...")
    reconciliation_summary = reconcile_transactions(test_data)
    print(f"✅ Reconciliation completed successfully")
    
    print("🔄 Converting to BAI2 format...")
    bai2_content = convert_to_bai2(test_data, "missing_opening_balance.pdf", reconciliation_summary, "113122655")
    
    # Extract just the comments section
    lines = bai2_content.split('\n')
    comments_start = -1
    comments_end = -1
    
    for i, line in enumerate(lines):
        if line.startswith('#Generated by BankStatementAgent'):
            comments_start = i
        elif comments_start >= 0 and not line.startswith('#') and line.strip():
            comments_end = i
            break
    
    if comments_end == -1:
        comments_end = len(lines)
    
    comments_section = '\n'.join(lines[comments_start:comments_end])
    
    print("✅ BAI2 COMMENTS WITH TRULY MISSING OPENING BALANCE:")
    print("=" * 80)
    print(comments_section)
    print("=" * 80)
    
    print()
    print("🎯 EXPECTED BEHAVIOR:")
    print("   ✅ Should show OB_UNKNOWN (not OB_SUSPICIOUS)")
    print("   ✅ Should show 'NOT_FOUND' (not extraction error)")
    print("   ✅ Should not mention confusion with deposits")
    print("   ✅ Should be clean and non-redundant")

if __name__ == "__main__":
    test_missing_opening_balance()
