#!/usr/bin/env python3

def analyze_working_vs_generated():
    """Detailed comparison of working file vs generated file"""
    
    print("🔍 DETAILED ANALYSIS: WORKING vs GENERATED BAI2 FILES")
    print("=" * 70)
    
    # Working file (WACBAI2_20250813 (1).bai)
    working_content = """01,083000564,323809,250813,0936,168262,,,2/
02,323809,083000564,1,250812,,USD,2/
03,2375133,,010,,,Z/
88,015,1498035,,Z/
88,040,,,Z/
88,045,1498035,,Z/
88,072,225962,,Z/
88,074,000,,Z/
88,100,393239,4,Z/
88,400,311973,8,Z/
88,075,,,Z/
88,079,,,Z/
16,301,13707,Z,478980340,0000001470,Deposit,/
16,301,32510,Z,478980341,0000001449,Deposit,/
16,301,133474,Z,478980342,0000001486,Deposit,/
16,301,213548,Z,478980343,0000001459,Deposit,/
16,555,18500,Z,478980344,,RETURNED DEPOSITED ITEM Check 192,/
16,451,6900,Z,478980346,,WORLD ACCEPTANCE CONC DEBIT 1455 SHEPHERDSV,/
16,451,9200,Z,478980347,,WORLD ACCEPTANCE CONC DEBIT 1479 NICHOLASVI,/
16,451,33360,Z,478980348,,WORLD ACCEPTANCE CONC DEBIT 1486 GEORGETOWN,/
16,451,34319,Z,478980349,,WORLD ACCEPTANCE CONC DEBIT 1470 PARIS,KY,/
16,451,55000,Z,478980350,,WORLD ACCEPTANCE CONC DEBIT 1432 SHELBYVILL,/
16,451,71234,Z,478980351,,WORLD ACCEPTANCE CONC DEBIT 1459 CYNTHIANA,,/
16,451,83460,Z,478980352,,WORLD ACCEPTANCE CONC DEBIT 1449 WINCHESTER,/
49,4632456,23/
98,4632456,1,25/
02,323809,083000564,1,250813,,USD,2/
03,2375133,,010,1498035,,Z/
88,015,,,Z/
88,040,1498035,,Z/
88,045,,,Z/
88,072,,,Z/
88,074,,,Z/
88,100,0,0,Z/
88,400,0,0,Z/
88,075,,,Z/
88,079,,,Z/
49,2996070,11/
98,2996070,1,13/
99,7628526,2,40/"""

    # Generated file (WACBAI2_20250813_5.bai)
    generated_content = """01,083000564,323809,250813,1503,202508131503,,,2/
#Generated by BankStatementAgent on 2025-08-13 15:03:40
#Source file: WACBAI2_20250813.pdf
#Account: 2375133
02,323809,083000564,1,250812,,USD,2/
03,2375133,,010,,,Z/
88,015,705212,,Z/
88,040,81266,,Z/
88,045,705212,,Z/
88,072,000,,Z/
88,074,000,,Z/
88,100,393239,4,Z/
88,400,311973,8,Z/
88,075,,,Z/
88,079,,,Z/
16,301,13707,Z,478980340,0000001470,Deposit,/
16,301,32510,Z,478980341,0000001471,Deposit,/
16,301,133474,Z,478980342,0000001472,Deposit,/
16,301,213548,Z,478980343,0000001473,Deposit,/
16,555,18500,Z,478980344,,Deposited Item Returned Ref Num: 478980344 RETURNE,/
88,Deposited Item Returned Ref Num: 478980344 RETURNE,/
16,451,6900,Z,478980345,,ACH Debit Received Ref Num: 478980346 WORLD ACCEPT,/
88,WORLD ACCEPTANCE CONC DEBIT 0346 WORLD ACCEPTANC,/
16,451,9200,Z,478980346,,ACH Debit Received Ref Num: 478980347 WORLD ACCEPT,/
88,WORLD ACCEPTANCE CONC DEBIT 0347 WORLD ACCEPTANC,/
16,451,33360,Z,478980347,,ACH Debit Received Ref Num: 478980348 WORLD ACCEPT,/
88,WORLD ACCEPTANCE CONC DEBIT 0348 WORLD ACCEPTANC,/
16,451,34319,Z,478980348,,ACH Debit Received Ref Num: 478980349 WORLD ACCEPT,/
88,WORLD ACCEPTANCE CONC DEBIT 0349 WORLD ACCEPTANC,/
16,451,55000,Z,478980349,,ACH Debit Received Ref Num: 478980350 WORLD ACCEPT,/
88,WORLD ACCEPTANCE CONC DEBIT 0350 WORLD ACCEPTANC,/
16,451,71234,Z,478980350,,ACH Debit Received Ref Num: 478980351 WORLD ACCEPT,/
88,WORLD ACCEPTANCE CONC DEBIT 0351 WORLD ACCEPTANC,/
16,451,83460,Z,478980351,,ACH Debit Received Ref Num: 478980352 WORLD ACCEPT,/
88,WORLD ACCEPTANCE CONC DEBIT 0352 WORLD ACCEPTANC,/
49,81266,31/
98,81266,1,33/
99,81266,1,35/"""

    working_lines = working_content.strip().split('\n')
    generated_lines = [line for line in generated_content.strip().split('\n') if not line.startswith('#')]
    
    print("1️⃣ HEADER COMPARISON:")
    print(f"   Working:   {working_lines[0]}")
    print(f"   Generated: {generated_lines[0]}")
    w_header = working_lines[0].split(',')
    g_header = generated_lines[0].split(',')
    print(f"   📌 File ID: Working={w_header[5]} vs Generated={g_header[5]} (✅ Both dynamic)")
    print()
    
    print("2️⃣ BALANCE SUMMARY (88 Records) - CRITICAL ISSUE:")
    balance_fields = [
        ("Opening Balance (015)", 3, "1498035", "705212"),
        ("Current Ledger (040)", 4, "", "81266"),
        ("Available Balance (045)", 5, "1498035", "705212"),
        ("Float (072)", 6, "225962", "000")
    ]
    
    for field_name, line_idx, work_val, gen_val in balance_fields:
        w_parts = working_lines[line_idx].split(',')
        g_parts = generated_lines[line_idx].split(',')
        status = "✅" if w_parts[2] == g_parts[2] else "❌"
        print(f"   {status} {field_name}: Working='{w_parts[2]}' vs Generated='{g_parts[2]}'")
    print()
    
    print("3️⃣ TRANSACTION RECORD COMPARISON:")
    
    # Get all transaction records
    working_txns = [line for line in working_lines if line.startswith('16,')]
    generated_txns = [line for line in generated_lines if line.startswith('16,')]
    
    print(f"   Working has {len(working_txns)} transactions")
    print(f"   Generated has {len(generated_txns)} transactions")
    print()
    
    print("   📋 DEPOSIT COMPARISON (first 4 deposits):")
    for i in range(min(4, len(working_txns), len(generated_txns))):
        if working_txns[i].startswith('16,301') and generated_txns[i].startswith('16,301'):
            w_parts = working_txns[i].split(',')
            g_parts = generated_txns[i].split(',')
            
            print(f"     Deposit {i+1}:")
            print(f"       Working:   {working_txns[i]}")
            print(f"       Generated: {generated_txns[i]}")
            
            # Check bank reference field differences
            bank_ref_status = "✅" if w_parts[5] == g_parts[5] else "❌"
            print(f"       {bank_ref_status} Bank Ref: '{w_parts[5]}' vs '{g_parts[5]}'")
            print()
    
    print("4️⃣ REFERENCE NUMBER ISSUES:")
    
    # Check reference number sequences
    working_refs = []
    generated_refs = []
    
    for line in working_txns:
        parts = line.split(',')
        working_refs.append(parts[4])
    
    for line in generated_txns:
        parts = line.split(',')
        generated_refs.append(parts[4])
    
    print("   Working reference sequence:   ", working_refs[:8])
    print("   Generated reference sequence: ", generated_refs[:8])
    print()
    
    # Check if sequences are offset
    if len(working_refs) >= 5 and len(generated_refs) >= 5:
        working_debit_start = working_refs[5] if len(working_refs) > 5 else "N/A"  # First debit
        generated_debit_start = generated_refs[5] if len(generated_refs) > 5 else "N/A"  # First debit
        print(f"   ❌ REFERENCE OFFSET: Debit sequence starts at {working_debit_start} vs {generated_debit_start}")
    print()
    
    print("5️⃣ TEXT DESCRIPTION ISSUES:")
    
    # Compare return transaction descriptions
    working_return = next((line for line in working_txns if line.startswith('16,555')), None)
    generated_return = next((line for line in generated_txns if line.startswith('16,555')), None)
    
    if working_return and generated_return:
        w_desc = working_return.split(',')[6]
        g_desc = generated_return.split(',')[6]
        print(f"   Return Transaction Text:")
        print(f"     Working:   '{w_desc}'")
        print(f"     Generated: '{g_desc}'")
        print(f"     ❌ Generated text is too verbose and truncated")
    print()
    
    print("6️⃣ MISSING STRUCTURE:")
    print(f"   ❌ Working file has TWO groups (250812 and 250813)")
    print(f"   ❌ Generated file has only ONE group (250812)")
    print(f"   ❌ Missing second group starting with: 02,323809,083000564,1,250813,,USD,2/")
    print()
    
    print("7️⃣ ENDING BALANCE ISSUES:")
    working_49_lines = [line for line in working_lines if line.startswith('49,')]
    generated_49_lines = [line for line in generated_lines if line.startswith('49,')]
    
    if working_49_lines and generated_49_lines:
        w_ending = working_49_lines[0].split(',')[1]
        g_ending = generated_49_lines[0].split(',')[1]
        print(f"   ❌ Ending Balance: Working={w_ending} vs Generated={g_ending}")
    print()
    
    print("🎯 CRITICAL FIXES NEEDED:")
    print("   1. ❌ Fix balance summary values (88 records)")
    print("   2. ❌ Fix bank reference numbering sequence")
    print("   3. ❌ Shorten transaction descriptions")
    print("   4. ❌ Add missing second date group (250813)")
    print("   5. ❌ Fix ending balance calculations")
    print("   6. ❌ Remove extra comment lines")
    print()
    
    print("✅ WHAT'S WORKING CORRECTLY:")
    print("   ✅ Transaction type codes (301, 451, 555)")
    print("   ✅ Funds type field (Z)")
    print("   ✅ Basic reference number format (478980xxx)")
    print("   ✅ Account number and header structure")

if __name__ == "__main__":
    analyze_working_vs_generated()
